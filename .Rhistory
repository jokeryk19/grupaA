git add markdown.Rmd
install.packages("ggstatsplot")
library(ggstatsplot)
# Utworzenie przedziałów metrażowych
breaks <- quantile(agencja_nieruchomosci$area, probs=seq(0,1, length.out=4), na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999, digits=3)  #wyłączam notację naukową, dajemy 3 miejsca po przecinku
library(tidyverse)   #pakiet wranglingowy, z fajkami i grafiką ggplot2
library(rmdformats)  #pakiet z szablonami Markdown
library(magrittr)   # pakiet do fajek
library(lubridate)  # pakiet do operacji na datach
library(dplyr)
library(knitr)
agencja_nieruchomosci <- read_csv("agencja_nieruchomosci.csv")
View(agencja_nieruchomosci)
getwd()
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych
#Zmiana stóp kwadratowych na metry kwadratowe. 1 stopa kwadratowa to 0.092903 metra kwadratowego
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = area*0.092903)
#Cena za metr kwadratowy oraz cena za ilość pokoi
agencja_nieruchomosci$price_per_sqft <- agencja_nieruchomosci$price / agencja_nieruchomosci$area
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_sqft, .after= price)
agencja_nieruchomosci$price_per_bedroom <- agencja_nieruchomosci$price / agencja_nieruchomosci$bedrooms
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_bedroom, .after = price_per_sqft)
# Zaokrąglanie do dwóch miejsc po przecinku w kolumnie price_per_sqft
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = round(area,2),
price_per_sqft = round(price_per_sqft,2))
#Ograniczenia zmiennych
agencja_nieruchomosci <- agencja_nieruchomosci %>%
filter(
price >= 0,
bedrooms > 0,
bathrooms >0
)
# Utworzenie przedziałów metrażowych
breaks <- quantile(agencja_nieruchomosci$area, probs=seq(0,1, length.out=4), na.rm = TRUE)
labels <- c("Małe", "Średnie", "Duże")
agencja_nieruchomosci$area_group <- cut(agencja_nieruchomosci$area, breaks=breaks, labels=labels, include.lowest = TRUE)
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(area_group, .after = area)
# Agregacja danych dla ceny
price_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
Cena = mean(price, na.rm = TRUE),
Mediana = median(price, na.rm = TRUE),
Min = min(price, na.rm = TRUE),
Max = max(price, na.rm = TRUE)
) %>%
ungroup()
# Agregacja danych dla ceny za m2
price_per_sqft_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
`Cena za m2` = mean(price_per_sqft, na.rm = TRUE),
`Mediana za m2` = median(price_per_sqft, na.rm = TRUE),
`Min za m2` = min(price_per_sqft, na.rm = TRUE),
`Max za m2` = max(price_per_sqft, na.rm = TRUE)
) %>%
ungroup()
kable(price_stats, format = "markdown", caption = "Średnie ceny w zależności od grup metrażowych")
cat("\n")
kable(price_per_sqft_stats, format = "markdown", caption = "Średnie ceny za metr kwadratowy w zależności od grup metrażowych")
# Agregacja danych na podstawie statusu umeblowania
price_per_sqft_stats_by_furnishing <- agencja_nieruchomosci %>%
group_by(furnishingstatus) %>%
summarise(
Liczba = n(),
`Cena za m2` = mean(price_per_sqft, na.rm = TRUE),
`Mediana za m2` = median(price_per_sqft, na.rm = TRUE),
`Min za m2` = min(price_per_sqft, na.rm = TRUE),
`Max za m2` = max(price_per_sqft, na.rm = TRUE)
) %>%
ungroup()
kable(price_per_sqft_stats_by_furnishing, format = "markdown", caption = "Średnie ceny za metr kwadratowy w zależności od statusu umeblowania")
get_plural_form <- function(n, singular, plural1, plural2) {
if (n == 1) {
return(singular)
} else if (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) {
return(plural1)
} else {
return(plural2)
}
}
agencja_nieruchomosci$bed_bath_combo <- paste(
agencja_nieruchomosci$bedrooms,
ifelse(agencja_nieruchomosci$bedrooms == 1, "sypialnia", "sypialnie"),
agencja_nieruchomosci$bathrooms,
mapply(get_plural_form, agencja_nieruchomosci$bathrooms, "łazienka", "łazienki", "łazienek")
)
# Tworzenie unikalnego identyfikatora dla każdej kombinacji sypialni i łazienek
agencja_nieruchomosci$bed_bath_combo <- paste(agencja_nieruchomosci$bedrooms, "sypialni", agencja_nieruchomosci$bathrooms, "łazienek")
# Agregacja danych
bed_bath_stats <- agencja_nieruchomosci %>%
group_by(bed_bath_combo) %>%
summarise(
Liczba = n(),
Średnia_cena = mean(price, na.rm = TRUE),
Mediana_ceny = median(price, na.rm = TRUE),
Min_cena = min(price, na.rm = TRUE),
Max_cena = max(price, na.rm = TRUE)
) %>%
ungroup() %>%
arrange(desc(Średnia_cena))
# Wyświetlenie statystyk
bed_bath_stats
install.packages("ggplot2")
install.packages("reshape2")
library(ggplot2)
library(reshape2)
korelacja <- cor(agencja_nieruchomosci[, c("price", "area_m2", "bedrooms", "bathrooms", "stories", "parking")], use = "complete.obs")
head(agencja_nieruchomosci)
numeryczne_zmienne <- agencja_nieruchomosci %>%
select(price, price_per_sqft, price_per_bedroom, area, bedrooms, bathrooms, stories, parking)
korelacja <- cor(numeryczne_zmienne, use = "complete.obs")
korelacja_melted <- melt(korelacja)
ggplot(data = korelacja_melted, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Korelacja") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(x='', y='', title='Mapa ciepła korelacji między zmiennymi')
numeryczne_zmienne <- agencja_nieruchomosci %>%
select(price_per_sqft, area, bedrooms, bathrooms, stories, parking)
korelacja <- cor(numeryczne_zmienne, use = "complete.obs")
korelacja_melted <- melt(korelacja)
ggplot(data = korelacja_melted, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Korelacja") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(x='', y='', title='Mapa ciepła korelacji między zmiennymi')
print(korelacja)
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych_df <- data.frame(Zmienna = names(braki_danych), Braki = braki_danych)
# Użycie kable() do wygenerowania ładnej tabeli
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci")
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych_df <- data.frame(Zmienna = names(braki_danych), Braki = braki_danych)
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci",
col.names = c("Zmienna", "Liczba braków danych"))
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych_df <- data.frame(Zmienna = names(braki_danych), Braki = braki_danych)
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci",
col.names = c("Zmienna", "Liczba braków danych"))
# Obliczenie brakujących danych
braki_danych <- colSums(is.na(agencja_nieruchomosci))
# Tworzenie ramki danych do wyświetlenia
braki_danych_df <- data.frame(Zmienna = names(braki_danych), Liczba_brakow_danych = braki_danych)
# Użycie kable() do wygenerowania ładnej tabeli
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci",
col.names = c("Zmienna", "Liczba braków danych"))
braki_danych <- colSums(is.na(agencja_nieruchomosci))
polskie_nazwy <- c("price" = "Cena", "price_per_sqft" = "Cena za metr kwadratowy",
"price_per_bedroom" = "Cena za sypialnię", "area" = "Powierzchnia",
"area_group" = "Grupa powierzchni", "bedrooms" = "Sypialnie",
"bathrooms" = "Łazienki", "stories" = "Piętra", "mainroad" = "Główna droga",
"guestroom" = "Pokój gościnny", "basement" = "Piwnica",
"hotwaterheating" = "Ogrzewanie wody", "airconditioning" = "Klimatyzacja",
"parking" = "Parking", "prefarea" = "Preferowana okolica",
"furnishingstatus" = "Stan umeblowania", "bed_bath_combo" = "Kombinacja sypialni i łazienek")
braki_danych_df <- data.frame(Zmienna = polskie_nazwy[names(braki_danych)],
Liczba_brakow_danych = braki_danych)
# Użycie kable() do wygenerowania ładnej tabeli
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci",
col.names = c("Zmienna", "Liczba braków danych"))
braki_danych <- colSums(is.na(agencja_nieruchomosci))
polskie_nazwy <- c("price" = "Cena", "price_per_sqft" = "Cena za metr kwadratowy",
"price_per_bedroom" = "Cena za sypialnię", "area" = "Powierzchnia", "bedrooms" = "Sypialnie",
"bathrooms" = "Łazienki", "stories" = "Piętra", "mainroad" = "Główna droga",
"guestroom" = "Pokój gościnny", "basement" = "Piwnica",
"hotwaterheating" = "Ogrzewanie wody", "airconditioning" = "Klimatyzacja",
"parking" = "Parking", "prefarea" = "Preferowana okolica",
"furnishingstatus" = "Stan umeblowania")
braki_danych_df <- data.frame(Zmienna = polskie_nazwy[names(braki_danych)],
Liczba_brakow_danych = braki_danych)
# Użycie kable() do wygenerowania ładnej tabeli
knitr::kable(braki_danych_df, caption = "Analiza braków danych w zbiorze agencja_nieruchomosci",
col.names = c("Zmienna", "Liczba braków danych"))
