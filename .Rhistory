library(readr)
agencja_nieruchomosci <- read_csv("agencja_nieruchomosci.csv")
View(agencja_nieruchomosci)
attach(agencja_nieruchomosci)
braki_danych <- sum(is.na(price, area, bedrooms, bathrooms, stories, mainroad, guestroom, basement, hotwaterheating, airconditioning, parking, prefarea, furnishingstatus))
braki_danych <- sum(is.na(price & area & bedrooms & bathrooms & stories& mainroad & guestroom & basement & hotwaterheating & airconditioning & parking & prefarea & furnishingstatus))
braki_danych
View(braki_danych)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych
#Sprawdzanie braków danych
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych
summary(agencja_nieruchomosci$price)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci$price & agencja_nieruchomosci$area)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci$price$area)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci$price)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci)
#Sprawdzanie braków danych
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych
library(ggplot2)
attach(agencja_nieruchomosci)
summary(agencja_nieruchomosci)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
library(validate)
attach(agencja_nieruchomosci)
braki_danych <- colSums(is.na(agencja_nieruchomosci))
braki_danych
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci)
dane %>%
select(IMDb.Score)%>%
head(10)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości")
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "4169E1")
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cfb1ff")
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cfb1ff")
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cyan3")
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cyan3", border = "pink3", outline = TRUE)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cyan3", border = "snow4", outline = TRUE)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości", col = "cyan3", border = "darkslateblue", outline = TRUE)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 2)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 1)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 1,2)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 1.2)
#Statystki poszczególnych zmiennych
plot(price)
plot(agencja_nieruchomosci$price, agencja_nieruchomosci$area,  type = "o", col = "blue",
main = "Wykres obserwacji dla zmiennej Cena",
xlab = "Obserwacja", ylab = "Cena"     )
plot(agencja_nieruchomosci$price, agencja_nieruchomosci$area,  type = "o", col = "cyan3",
main = "Wykres obserwacji dla zmiennej Cena",
xlab = "Obserwacja", ylab = "Cena"     )
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
library(validate)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 1.2)
plot(agencja_nieruchomosci$price, agencja_nieruchomosci$area,  type = "o", col = "cyan3",
main = "Wykres obserwacji dla zmiennej Cena",
xlab = "Obserwacja", ylab = "Cena"     )
install.packages("ggstatsplot")
#Sprawdzanie braków danych
library(ggplot2)
View(agencja_nieruchomosci)
#Sprawdzanie braków danych
library(ggplot2)
library(validatetools)
#Sprawdzanie braków danych
library(ggplot2)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
install.packages("rmdformats")
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
library(rmdformats)
library(validatetools)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
library(ggstatsplot)
install.packages("ggstatsplot")
library(ggstatsplot)
library(ggstatsplot)
install.packages("ggstatsplot")
library(ggstatsplot)
library(ggstatsplot)
install.packages("the_missing_package")
update.packages(ask = FALSE, checkBuilt = TRUE)
chooseCRANmirror(graphics = FALSE, ind = 1) # Choose a different mirror
install.packages("ggstatsplot")
library(ggstatsplot)
install.packages(path_to_downloaded_package, repos = NULL, type="source")
library(ggstatsplot)
install.packages("ggstatsplot")
install.packages("dplyr")
install.packages("statsExpressions")
install.packages("ggside")
install.packages("ggstatsplot")
library(ggplot2)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
install.packages("Matrix")
install.packages("scales")
install.packages("dplyr")
install.packages("MatrixModels")
install.packages("ggside")
install.packages("ggstatsplot")
install.packages("ggstatsplot")
library(ggstatsplot)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
ggbetweenstats(
library(ggstatsplot)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
```{r echo=FALSE}
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
boxplot(agencja_nieruchomosci$price, main = "wykres pudełkowy dla zmiennej price",
xlab = "price", ylab = "Wartości",
col = "cyan3", border = "darkslateblue", outline = TRUE, lwd = 1.2)
plot(agencja_nieruchomosci$price, agencja_nieruchomosci$area,  type = "o", col = "cyan3",
main = "Wykres obserwacji dla zmiennej Cena",
xlab = "Obserwacja", ylab = "Cena"     )
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
#Statystki poszczególnych zmiennych
summary(agencja_nieruchomosci)
#Zmiana stóp kwadratowych na metry kwadratowe. 1 stopa kwadratowa to 0.092903 metra kwadratowego
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = area*0.092903)
library(dplyr)
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = area*0.092903)
#Cena za metr kwadratowy oraz cena za ilość pokoi
agencja_nieruchomosci$price_per_sqft <- agencja_nieruchomosci$price / agencja_nieruchomosci$area
agencja_nieruchomosci$price_per_bedroom <- agencja_nieruchomosci$price / agencja_nieruchomosci$bedrooms
# Zaokrąglanie do dwóch miejsc po przecinku w kolumnie price_per_sqft
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = round(area,2),
price_per_sqft = round(price_per_sqft,2))
#Ograniczenia zmiennych
agencja_nieruchomosci <- agencja_nieruchomosci %>%
filter(
price >= 0,
bedrooms > 0,
bathrooms >0
)
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatuss,
y=area_m2
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatuss,
y=area
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatuss,
y=area
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatuss,
y=price_per_sqft
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=area,
y=price_per_sqft
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatus,
y=price_per_sqft
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatus,
y=price_per_sqft
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=bedrooms,
y=price
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatus,
y=price_per_sqft
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#Zmiana stóp kwadratowych na metry kwadratowe. 1 stopa kwadratowa to 0.092903 metra kwadratowego
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = area*0.092903)
#Cena za metr kwadratowy oraz cena za ilość pokoi
agencja_nieruchomosci$price_per_sqft <- agencja_nieruchomosci$price / agencja_nieruchomosci$area
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_sqft, .after= price)
agencja_nieruchomosci$price_per_bedroom <- agencja_nieruchomosci$price / agencja_nieruchomosci$bedrooms
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_bedroom, .after = price_per_sqft)
# Zaokrąglanie do dwóch miejsc po przecinku w kolumnie price_per_sqft
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = round(area,2),
price_per_sqft = round(price_per_sqft,2))
#Ograniczenia zmiennych
agencja_nieruchomosci <- agencja_nieruchomosci %>%
filter(
price >= 0,
bedrooms > 0,
bathrooms >0
)
# Utworzenie przedziałów metrażowych
breaks <- quantile(agencja_nieruchomosci$area, probs=seq(0,1, length.out=4), na.rm = TRUE)
labels <- c("Małe", "Średnie", "Duże")
agencja_nieruchomosci$area_group <- cut(agencja_nieruchomosci$area, breaks=breaks, labels=labels, include.lowest = TRUE)
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(area_group, .after = area)
# Agregacja danych dla ceny
price_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
Cena = mean(price, na.rm = TRUE),
Mediana = median(price, na.rm = TRUE),
Min = min(price, na.rm = TRUE),
Max = max(price, na.rm = TRUE)
) %>%
ungroup()
# Agregacja danych dla ceny za m2
price_per_sqft_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
`Cena za m2` = mean(price_per_sqft, na.rm = TRUE),
`Mediana za m2` = median(price_per_sqft, na.rm = TRUE),
`Min za m2` = min(price_per_sqft, na.rm = TRUE),
`Max za m2` = max(price_per_sqft, na.rm = TRUE)
) %>%
ungroup()
kable(price_stats, format = "markdown", caption = "Średnie ceny w zależności od grup metrażowych")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)   #pakiet wranglingowy, z fajkami i grafiką ggplot2
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)   #pakiet wranglingowy, z fajkami i grafiką ggplot2
install.packages("tidyverse")
install.packages("rmdformats")
library(tidyverse)   #pakiet wranglingowy, z fajkami i grafiką ggplot2
library(rmdformats)  #pakiet z szablonami Markdown
library(magrittr)
library(lubridate)
#Zmiana stóp kwadratowych na metry kwadratowe. 1 stopa kwadratowa to 0.092903 metra kwadratowego
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = area*0.092903)
#Cena za metr kwadratowy oraz cena za ilość pokoi
agencja_nieruchomosci$price_per_sqft <- agencja_nieruchomosci$price / agencja_nieruchomosci$area
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_sqft, .after= price)
agencja_nieruchomosci$price_per_bedroom <- agencja_nieruchomosci$price / agencja_nieruchomosci$bedrooms
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(price_per_bedroom, .after = price_per_sqft)
# Zaokrąglanie do dwóch miejsc po przecinku w kolumnie price_per_sqft
agencja_nieruchomosci <- agencja_nieruchomosci %>%
mutate(area = round(area,2),
price_per_sqft = round(price_per_sqft,2))
#Ograniczenia zmiennych
agencja_nieruchomosci <- agencja_nieruchomosci %>%
filter(
price >= 0,
bedrooms > 0,
bathrooms >0
)
# Utworzenie przedziałów metrażowych
breaks <- quantile(agencja_nieruchomosci$area, probs=seq(0,1, length.out=4), na.rm = TRUE)
labels <- c("Małe", "Średnie", "Duże")
agencja_nieruchomosci$area_group <- cut(agencja_nieruchomosci$area, breaks=breaks, labels=labels, include.lowest = TRUE)
agencja_nieruchomosci <- agencja_nieruchomosci %>%
relocate(area_group, .after = area)
# Agregacja danych dla ceny
price_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
Cena = mean(price, na.rm = TRUE),
Mediana = median(price, na.rm = TRUE),
Min = min(price, na.rm = TRUE),
Max = max(price, na.rm = TRUE)
) %>%
ungroup()
# Agregacja danych dla ceny za m2
price_per_sqft_stats <- agencja_nieruchomosci %>%
group_by(area_group) %>%
summarise(
Liczba = n(),
`Cena za m2` = mean(price_per_sqft, na.rm = TRUE),
`Mediana za m2` = median(price_per_sqft, na.rm = TRUE),
`Min za m2` = min(price_per_sqft, na.rm = TRUE),
`Max za m2` = max(price_per_sqft, na.rm = TRUE)
) %>%
ungroup()
kable(price_stats, format = "markdown", caption = "Średnie ceny w zależności od grup metrażowych")
library(knitr)
library(tidyverse)   #pakiet wranglingowy, z fajkami i grafiką ggplot2
library(rmdformats)  #pakiet z szablonami Markdown
library(magrittr)   # pakiet do fajek
library(lubridate)  # pakiet do operacji na datach
library(dplyr)
library(knitr)
kable(price_stats, format = "markdown", caption = "Średnie ceny w zależności od grup metrażowych")
cat("\n")
kable(price_per_sqft_stats, format = "markdown", caption = "Średnie ceny za metr kwadratowy w zależności od grup metrażowych")
#Sprawdzanie braków danych
library(ggplot2)
library(rmdformats)
library(validate)
ggbetweenstats(
data=agencja_nieruchomosci,
x=furnishingstatus,
y=price_per_sqft
)
ggbetweenstats(
data=agencja_nieruchomosci,
x=area_group,
y=parking
)
